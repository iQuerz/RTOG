@using RTOG.App.Models.Modals;
@model GameViewModel
<script src="~/js/MapInit.js"></script>
<input id="CreateUnitURL" hidden value="@Url.Action("Create", "Unit")" />
    <script type="module">
        Game = @Json.Serialize(Model.Game);
        import { mapObject } from "/js/Map.js";
        mapObject.DrawBoard();
    </script>
<script src="/lib/bootstrap-menu/BootstrapMenu.min.js"></script>
<script type="module" src="~/js/menu.js" defer></script>

<!-- Link BootstrapMenu CSS stylesheet -->
<link rel="stylesheet" href="/css/dropdown.css">

<div class="is-flex-row">

    <div class="is-flex-down" style="flex-shrink:0; justify-content: flex-start; align-items:flex-start; width:120px;">
        <h1>@Model.MyAccount.Username</h1>
        <p>points:</p>
        <p>idk stats</p>
        <p>more stats</p>
        <button>End Turn</button>
    </div>

    <div id="Map">
    </div>

    <div class="is-flex-down" style="flex-shrink:0; justify-content: flex-start; align-items:flex-end; width:120px;">
        @foreach (var player in Model.Game.Players)
        {
            if (player.Name == Model.MyAccount.Username) continue;
            <div class="padding" style="@(Model.Game.IsPlaying(player) ? "":"opacity:0.5;")border:1px solid black; flex-shrink:0; width: 80%; margin-bottom:1rem;">
                <h2>@player.Name</h2>
                <p>money:</p>
                <p>stats</p>
            </div>
        }
    </div>

    <a href="#upgradeUnitsModal" rel="modal:open">open modal</a>
</div>

<div class="modal" id="unitsSelectModal">
    @{
        await Html.RenderPartialAsync("_UnitsSelectModal", new UnitsSelectModalModel() { Units = new() });
    }
</div>

<div class="modal" id="upgradeUnitsModal">
    @{
        await Html.RenderPartialAsync("_UpgradeUnitsModal", new UpgradeUnitsModalModel() { Upgrades = new() });
    }
</div>

<script>
    $(document).ready(function() {
        $.notify("Your turn!", { position: 'top center' })
        $('#unitsSelectModal').on('modalClose', function(units) {
            if (window.activeAction == 2) {
                // upgrade selected units
                let upgradeID = window.selectedUpgradeID;
                ajaxBody({
                    type: 'POST',
                    url: '@Url.Action("UpgradeUnits", "Unit")' + '/' + upgradeID,
                    data: units,
                    success: function() {
                        page.updateOtherGamePlayers();
                    }
                })
            }
            else {
                //kod ako je selected units za move
                let tileID = window.selectedTileID;
                ajaxBody({
                    type: 'POST',
                    url: '@Url.Action("MoveUnits", "Unit")' + '/' + tileID,
                    data: units,
                    success: function(){
                        page.updateOtherGamePlayers();
                    }
                })
            }
        });

        $('#upgradeUnitsModal').on('upgradesModalClose', function(upgradeID) {
            console.log("event caught", upgradeID)

            @*ajaxQuery({
                type: 'GET',
                url: '@Url.Action("GetAvailableUnitsForUpgrade","Unit")',
                data: {
                    upgradeID: upgradeID,
                    tileID: window.clickedTileID
                },
                success: function() {
                    page.updateOtherGamePlayers();
                }
            });*@
            showUnitsSelectModal();
            console.log("hi")
        });
    });

    function showUnitsSelectModal(){
        $('#unitsSelectModal').modal();
    }
</script>